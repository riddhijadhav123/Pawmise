{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\pet_app\\\\frontend\\\\src\\\\ProductPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { petProducts } from \"./Data\";\nimport \"./Adopt.css\";\nimport \"./Shop.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProductPage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const product = petProducts.find(p => p.id === Number(id));\n  const [quantity, setQuantity] = useState(1);\n  if (!product) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Product not found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 24\n  }, this);\n  const handleShopNow = async () => {\n    try {\n      // Step 1: create the order on backend for Razorpay\n      const response = await fetch(\"http://localhost:5000/api/payment/orders\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          amount: product.price * quantity\n        })\n      });\n      const order = await response.json();\n\n      // Step 2: configure Razorpay checkout\n      const options = {\n        key: \"YOUR_TEST_KEY_ID\",\n        // Replace with your Razorpay Test Key ID\n        amount: order.amount,\n        currency: order.currency,\n        name: product.name,\n        description: product.description,\n        order_id: order.id,\n        handler: response => {\n          alert(\"Payment Successful! Payment ID: \" + response.razorpay_payment_id);\n          // Optionally handle payment confirmation API call here\n        },\n        prefill: {\n          name: \"\",\n          email: \"\",\n          contact: \"\"\n        },\n        theme: {\n          color: \"#3399cc\"\n        }\n      };\n\n      // Step 3: open Razorpay checkout modal\n      const rzp = new window.Razorpay(options);\n      rzp.open();\n    } catch (error) {\n      alert(\"Failed to initiate payment. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(-1),\n      children: \"Back to Shop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: product.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: product.url,\n      alt: product.alt,\n      className: \"product-img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: product.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Price: \\u20B9\", product.price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Quantity:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: \"1\",\n        max: product.quantityAvailable || 10,\n        value: quantity,\n        onChange: e => setQuantity(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleShopNow,\n      children: \"Shop Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(ProductPage, \"VRiTbJNCZIFAjGCy0dbLBaYwKgI=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ProductPage;\nvar _c;\n$RefreshReg$(_c, \"ProductPage\");","map":{"version":3,"names":["React","useState","useParams","useNavigate","petProducts","jsxDEV","_jsxDEV","ProductPage","_s","id","navigate","product","find","p","Number","quantity","setQuantity","children","fileName","_jsxFileName","lineNumber","columnNumber","handleShopNow","response","fetch","method","headers","body","JSON","stringify","amount","price","order","json","options","key","currency","name","description","order_id","handler","alert","razorpay_payment_id","prefill","email","contact","theme","color","rzp","window","Razorpay","open","error","className","onClick","src","url","alt","type","min","max","quantityAvailable","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/pet_app/frontend/src/ProductPage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { petProducts } from \"./Data\";\r\nimport \"./Adopt.css\";\r\nimport \"./Shop.css\";\r\n\r\nexport default function ProductPage() {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const product = petProducts.find((p) => p.id === Number(id));\r\n  const [quantity, setQuantity] = useState(1);\r\n\r\n  if (!product) return <p>Product not found.</p>;\r\n\r\n  const handleShopNow = async () => {\r\n    try {\r\n      // Step 1: create the order on backend for Razorpay\r\n      const response = await fetch(\"http://localhost:5000/api/payment/orders\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          amount: product.price * quantity,\r\n        }),\r\n      });\r\n\r\n      const order = await response.json();\r\n\r\n      // Step 2: configure Razorpay checkout\r\n      const options = {\r\n        key: \"YOUR_TEST_KEY_ID\", // Replace with your Razorpay Test Key ID\r\n        amount: order.amount,\r\n        currency: order.currency,\r\n        name: product.name,\r\n        description: product.description,\r\n        order_id: order.id,\r\n        handler: (response) => {\r\n          alert(\"Payment Successful! Payment ID: \" + response.razorpay_payment_id);\r\n          // Optionally handle payment confirmation API call here\r\n        },\r\n        prefill: {\r\n          name: \"\",\r\n          email: \"\",\r\n          contact: \"\",\r\n        },\r\n        theme: {\r\n          color: \"#3399cc\",\r\n        },\r\n      };\r\n\r\n      // Step 3: open Razorpay checkout modal\r\n      const rzp = new window.Razorpay(options);\r\n      rzp.open();\r\n    } catch (error) {\r\n      alert(\"Failed to initiate payment. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"product-page-container\">\r\n      <button onClick={() => navigate(-1)}>Back to Shop</button>\r\n      <h2>{product.name}</h2>\r\n      <img src={product.url} alt={product.alt} className=\"product-img\" />\r\n      <p>{product.description}</p>\r\n      <p>Price: â‚¹{product.price}</p>\r\n      <label>\r\n        Quantity:\r\n        <input\r\n          type=\"number\"\r\n          min=\"1\"\r\n          max={product.quantityAvailable || 10}\r\n          value={quantity}\r\n          onChange={(e) => setQuantity(Number(e.target.value))}\r\n        />\r\n      </label>\r\n      <button onClick={handleShopNow}>Shop Now</button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}